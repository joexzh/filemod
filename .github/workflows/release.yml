name: Release
on:
  push:
    tags:
      - "[0-9]+.*"

jobs:
  create_release:
    name: Create Github Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Extract Changelog
        run: grep -Pzo '(?s)^## [^\n]*\n\n\K.*?(?=\n\n## v?[0-9])' ${{ github.workspace }}/CHANGELOG.md | tee ${{ github.workspace }}/extracted_changelog
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: ${{ github.workspace }}/extracted_changelog
          generate_release_notes: true
          prerelease: ${{ contains(github.ref_name, '-') }}
          make_latest: true

  release_window_package:
    needs: create_release
    runs-on: windows-latest
    env:
      BUILD_TYPE: Release
      VCPKG_BINARY_SOURCES: clear;files,${{ github.workspace }}/vcpkg/binary-cache,readwrite

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: ilammy/msvc-dev-cmd@v1

      - uses: lukka/run-vcpkg@v11

      - uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/vcpkg/binary-cache
          key: vcpkg-${{ github.workflow }}-${{ github.job }}-${{ hashFiles('vcpkg.json', 'vcpkg-configuration.json') }}

      - name: CMake preset workflow (config, build, test and pack)
        run: |
          cmake --workflow release-pack-wf

      - name: Upload *.exe, *.zip
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{github.workspace}}/build/*.exe
            ${{github.workspace}}/build/*.zip

  release_linux_package:
    needs: create_release
    runs-on: ubuntu-latest
    env:
      CCACHE_DIR: ${{ github.workspace }}/.cache/ccache

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: lukka/run-vcpkg@v11

      - uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.cache/ccache
          key: meson-${{ github.workflow }}-${{ github.job }}

      - run: |
          sudo apt-get update
          sudo apt-get purge libsqlite3-dev libarchive-dev
          sudo apt-get install -y meson ccache

      - name: Meson compile static link, create .tar.gz
        run: |
          out_dir="filemod-${{ github.ref_name }}-x86_64-linux"
          meson setup builddir --buildtype=release --default-library=static --prefix=$PWD/builddir/$out_dir
          cd builddir
          meson compile
          meson test -v
          meson install --tags strip --strip
          tar -czf "$out_dir.tar.gz" "$out_dir"

      - name: Upload *.tar.gz
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{github.workspace}}/builddir/*.tar.gz

  release_deb_package:
    needs: create_release
    runs-on: ubuntu-latest
    env:
      CCACHE_DIR: ${{ github.workspace }}/.cache/ccache

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: lukka/run-vcpkg@v11

      - uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.cache/ccache
          key: meson-${{ github.workflow }}-${{ github.job }}

      - run: |
          sudo apt-get update
          sudo apt-get install -y meson ccache libsqlite3-dev libarchive-dev

      - name: Meson compile dynamic link, create .deb
        run: |
          out_dir="filemod_${{ github.ref_name }}_amd64"
          meson setup builddir --buildtype=release --prefix=$PWD/builddir/$out_dir/usr
          cd builddir
          meson compile
          meson test -v
          meson install --tags strip --strip
          meson install --tags runtime
          mkdir "$out_dir/DEBIAN"
          mv debian_control.out "$out_dir/DEBIAN/control"
          dpkg-deb -b --root-owner-group "$out_dir"

      - name: Upload *.deb
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{github.workspace}}/builddir/*.deb
